<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.axon.market.dao.mapper.itag.IDimensionMapper">

    <select id="queryAllDimensionCounts" resultType="java.lang.Integer">
        select
            count(1)
        from market_dimension as d
        where d.status=0
    </select>

    <select id="queryDimensionsByPage" resultType="com.axon.market.common.domain.itag.DimensionDomain">
        select
            d.id as id,
            d.name as name,
            d.value as value,
            d.create_time as createTime
        from market_dimension as d
        where d.status=0
        order by d.id desc
        limit ${limit} offset ${offset}
    </select>

    <select id="queryAllDimensions" resultType="com.axon.market.common.domain.itag.DimensionDomain">
        select
            d.id as id,
            d.name as name,
            d.value as value,
            d.create_time as createTime
        from market_dimension as d
        where d.status=0
    </select>

    <insert id="createDimension" parameterType="com.axon.market.common.domain.itag.DimensionDomain">
        insert into market_dimension
        (
            name,
            value,
            create_time,
            status
        )
        values
        (
            #{info.name},
            #{info.value},
            #{info.createTime},
            0
        )
    </insert>

    <update id="updateDimension" parameterType="com.axon.market.common.domain.itag.DimensionDomain">
        update market_dimension set
        <if test = "info.name != null">
            name = #{info.name},
        </if>
        <if test = "info.value != null">
            value = #{info.value},
        </if>
            id = #{info.id}
        where id = #{info.id}
    </update>

    <update id="deleteDimension">
        update market_dimension set
            status = -1
        where id = #{id}
    </update>

    <select id="queryAllDimensionIdAndNames" resultType="com.axon.market.common.domain.icommon.IdAndNameDomain">
        select
            d.id as id,
            d.name as name
        from market_dimension as d
        where d.status=0
    </select>

    <select id="queryDimensionValueById" resultType="java.lang.String">
        select
            d.value as value
        from market_dimension as d
        where d.id = #{id}
    </select>

</mapper>