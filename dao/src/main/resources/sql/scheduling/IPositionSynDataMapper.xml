<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.axon.market.dao.scheduling.IPositionSynDataMapper">

    <update id="createPhoneTable">
        create table  ${tableName} (phone varchar(20)) ENGINE=InnoDB DEFAULT CHARSET=utf8
    </update>

    <insert id="syncPhone">
        insert into ${tableName}(
        phone
        )
        values
        <foreach collection="dataList" item="item" index="" open="" close="" separator=",">
            (
            #{item}
            )
        </foreach>
    </insert>

    <insert id="syncPhone2">
        insert into ${tableName}(
        phone
        )
        values
        <foreach collection="dataList" item="item" index="" open="" close="" separator=",">
            (
            #{item.phone}
            )
        </foreach>
    </insert>

    <select id="getConfSegmentId" resultType="java.lang.String">
        select group_concat(id) as id from pdc_location.conf_segment where title_code in (${areaCode})
    </select>

    <insert id="insertPTask" parameterType="com.axon.market.common.domain.isystem.PositionDataSynDomain" useGeneratedKeys="true" keyProperty="taskId">
         insert into pdc_location.p_task_scene_location(
                                                        taskName
                                                        ,messageType
                                                        ,taskStartTm
                                                        ,taskEndTm
                                                        ,monitorStartTm
                                                        ,monitorEndTm
                                                        ,monitoredBsId
                                                        ,monitorType
                                                        ,marketContent
                                                        ,marketUrl
                                                        ,marketInterval
                                                        ,userFilterType_black
                                                        ,userFilterList_black
                                                        ,execute_status
                                                        ,areano
                                                        ,delete_status
                                                        ,cid
                                                        ,userFilterType_white
                                                        ,userFilterList_white
                                                        ,ctime
                                                        ,sp_num
                                                        ,userFilter_black_segment
                                                        ,userFilter_white_segment
                                                        ,county
                                                        ,usergroup_name
                                                        ,usergroup_id
                                                        ,triggerLimit
                                                        ,weights
                                                        ,channel_id
                                                        ,content_module_id
                                                        ,location_type_id
                                                        ,trigger_channel_id
                                                        ,validity_date_trigger_type
                                                        ,validity_date
                                                        ,sms_report_status
                                                        ,sms_report_phone
                                                        ,manru_range
                                                        ,sms_content_id
                                                        ,market_content_extend
                                                        )
                                                 VALUES
                                                        (
                                                        #{taskName},#{messageType},UNIX_TIMESTAMP(#{taskStartTm}),UNIX_TIMESTAMP(#{taskEndTm}),
                                                        #{monitorStartTm},#{monitorEndTm},#{monitoredBsId},#{monitorType},#{marketContent},
                                                        #{marketUrl},#{marketInterval},#{userFilterTypeBlack},#{userFilterListBlack},
                                                        #{executeStatus},#{areano},#{deleteStatus},#{cid},
                                                        #{userFilterTypeWhite},#{userFilterListWhite},now(),#{spNum},
                                                        #{userFilterBlackSegment},(select id from pdc_location.conf_segment s where s.title_code = #{areano}),#{county},#{usergroupName},
                                                        #{usergroupId},#{triggerLimit},#{weights},#{channelId},
                                                        #{contentModuleId},#{locationTypeId},#{triggerChannelId},#{validityDateTriggerType},
                                                        #{validityDate},#{smsReportStatus},#{smsReportPhone},#{manruRange},#{smsContentId},#{marketContentExtend}
                                                        )
    </insert>

    <update id="updatePTask" parameterType="com.axon.market.common.domain.isystem.PositionDataSynDomain">
         update pdc_location.p_task_scene_location
            set
                taskStartTm = UNIX_TIMESTAMP(#{taskStartTm})
                ,taskEndTm   = UNIX_TIMESTAMP(#{taskEndTm})
                ,execute_status  = #{executeStatus}
                ,messageType = #{messageType}
                ,ctime  = now()
        where taskId = #{taskId}
    </update>

    <update id="deleteSynData">
        update pdc_location.p_task_scene_location
            set
                execute_status = 2,
                 messageType = 3,
                 delete_status = 3,
                ctime = now()
         where taskId = #{pTaskId}
    </update>

    <update id="deletePTask">
        update pdc_location.p_task_scene_location
        set
            execute_status = 2,
            messageType = 3,
            delete_status = 3,
            ctime = now()
        where FIND_IN_SET(taskId,#{pTaskIds})
    </update>

    <update id="pauseSynData">
         update pdc_location.p_task_scene_location
            set
                execute_status = 2,
                ctime = now()
         where taskId = #{pTaskId}
    </update>

    <update id="resumeSynData">
        update pdc_location.p_task_scene_location
            set
                execute_status = 6,
                messageType = 3,
                ctime = now()
         where taskId = #{pTaskId}
    </update>

    <delete id="deleteConfBaseInfoById">
        delete from pdc_location.conf_baseinfo where base_id in (${baseIds});
    </delete>

    <insert id="syncConfBaseInfo">
        insert into pdc_location.conf_baseinfo(base_id,base_name,location_type,city_name,lng,lat,radius,address,city_code,location_type_id,status,add_date,business_hall_coding)
        values
        <foreach collection="shopList" item="item" index="" open="" close="" separator=",">
            (
            #{item.baseId},#{item.baseName},#{item.locationType},#{item.cityName},#{item.lng},#{item.lat},#{item.radius},
            #{item.address},#{item.cityCode},#{item.locationTypeId},#{item.status},#{item.addDate},#{item.businessHallCode}
            )
        </foreach>
    </insert>



</mapper>